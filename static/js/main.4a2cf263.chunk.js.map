{"version":3,"sources":["Home.js","Profile.js","Nav.js","Auth/Auth.js","Callback.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","class","Component","Profile","state","profile","error","this","loadUserProfile","_this2","props","auth","getProfile","setState","Fragment","style","maxWidth","maxHeight","borderRadius","position","top","src","picture","alt","JSON","stringify","Nav","_this$props$auth","isAuthenticated","login","logout","Link","to","onClick","Auth","history","_this","Object","classCallCheck","auth0","authorize","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","push","alert","concat","console","log","expiresAt","expiresIn","Date","getTime","localStorage","setItem","removeItem","userProfile","clientID","process","returnTo","getAccessToken","getItem","Error","cb","client","userInfo","WebAuth","domain","redirectUri","responseType","scope","parse","Callback","componentDidMount","test","location","hash","App","possibleConstructorReturn","getPrototypeOf","call","src_Nav","Route","path","exact","render","src_Home","assign","src_Callback","src_Profile","Redirect","Boolean","window","hostname","match","ReactDOM","BrowserRouter","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a2cf263.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Home extends Component {\n\n  // Render home page\n  render() {\n    return (\n      <div className=\"home-page txt-center\">\n        <div className=\"content\">\n        <h1 class=\"text-color\">Hello!</h1>\n        <p>Good to see you here</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass Profile extends Component {\n  state = {\n    profile: null,\n    error: \"\"\n  };\n\n  componentDidMount() {\n    this.loadUserProfile();\n  }\n\n  // Get user profile data\n  loadUserProfile() {\n    this.props.auth.getProfile((profile, error) =>\n      this.setState({ profile, error })\n    );\n  }\n\n  // Render Profile page\n  render() {\n    const { profile } = this.state;\n    if (!profile) return null;\n    return (\n      <>\n       <div className=\"profile-page\">\n        <div className=\"content\">\n        <h1 class=\"text-color txt-center\">Welcome</h1>\n        <div className=\"fl\">\n           <img\n            style={{ maxWidth: 200, maxHeight: 200, borderRadius:50, position:\"relative\", top:25 }}\n            src={profile.picture}\n            alt=\"profile pic\"\n            />\n        </div>\n        <div className=\"fr\">\n            <pre>{JSON.stringify(profile, null, 2)}</pre>\n        </div>\n        </div>\n       </div>\n\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Nav extends Component {\n  render() {\n    const { isAuthenticated, login, logout } = this.props.auth;\n    return (\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/profile\">Profile</Link>\n          </li>\n          <li className=\"login\"> \n            <button className=\"login-btn\" onClick={isAuthenticated() ? logout : login}>\n              {isAuthenticated() ? \"Log Out\" : \"Log In\"}\n            </button>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import auth0 from \"auth0-js\";\n\nexport default class Auth {\n  constructor(history) {\n    this.history = history;\n    this.userProfile = null;\n    this.auth0 = new auth0.WebAuth({\n      domain: process.env.REACT_APP_AUTH0_DOMAIN,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n      responseType: \"token id_token\",\n      scope: \"openid profile email\"\n    });\n  }\n\n  login = () => {\n    this.auth0.authorize();\n  };\n\n  handleAuthentication = () => {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n        this.history.push(\"/\");\n      } else if (err) {\n        this.history.push(\"/\");\n        alert(`Error: ${err.error}. Check the console for further details.`);\n        console.log(err);\n      }\n    });\n  };\n\n  setSession = authResult => {\n    console.log(authResult);\n    // set the time that the access token will expire\n    const expiresAt = JSON.stringify(\n      authResult.expiresIn * 1000 + new Date().getTime()\n    );\n\n    localStorage.setItem(\"access_token\", authResult.accessToken);\n    localStorage.setItem(\"id_token\", authResult.idToken);\n    localStorage.setItem(\"expires_at\", expiresAt);\n  };\n\n  isAuthenticated() {\n    const expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n    return new Date().getTime() < expiresAt;\n  }\n\n  logout = () => {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n    this.userProfile = null;\n    this.auth0.logout({\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      returnTo: \"http://localhost:3000\"\n    });\n  };\n\n  getAccessToken = () => {\n    const accessToken = localStorage.getItem(\"access_token\");\n    if (!accessToken) {\n      throw new Error(\"No access token found.\");\n    }\n    return accessToken;\n  };\n\n  getProfile = cb => {\n    if (this.userProfile) return cb(this.userProfile);\n    this.auth0.client.userInfo(this.getAccessToken(), (err, profile) => {\n      if (profile) this.userProfile = profile;\n      cb(profile, err);\n    });\n  };\n}\n","import React, { Component } from \"react\";\n\nclass Callback extends Component {\n  componentDidMount = () => {\n    // Handle authentication if expected values are in the URL.\n    if (/access_token|id_token|error/.test(this.props.location.hash)) {\n      this.props.auth.handleAuthentication();\n    } else {\n      throw new Error(\"Invalid callback URL.\");\n    }\n  };\n  render() {\n    return <h1>Loading...</h1>;\n  }\n}\n\nexport default Callback;\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Profile from \"./Profile\";\nimport Nav from \"./Nav\";\nimport Auth from \"./Auth/Auth\";\nimport Callback from \"./Callback\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.auth = new Auth(this.props.history);\n  }\n  render() {\n    return (\n      <>\n        <Nav auth={this.auth} />\n        <div className=\"body\">\n          <Route\n            path=\"/\"\n            exact\n            render={props => <Home auth={this.auth} {...props} />}\n          />\n          <Route\n            path=\"/callback\"\n            render={props => <Callback auth={this.auth} {...props} />}\n          />\n          <Route\n            path=\"/profile\"\n            render={props =>\n              this.auth.isAuthenticated() ? (\n                <Profile auth={this.auth} {...props} />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <Route component={App} />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}